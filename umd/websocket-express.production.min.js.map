{"version":3,"sources":["node_modules/lodash-es/_freeGlobal.js","node_modules/lodash-es/_root.js","node_modules/lodash-es/_Symbol.js","node_modules/lodash-es/_getRawTag.js","node_modules/lodash-es/_objectToString.js","node_modules/lodash-es/_baseGetTag.js","node_modules/lodash-es/isObjectLike.js","node_modules/lodash-es/_baseIsArguments.js","node_modules/lodash-es/isArguments.js","node_modules/lodash-es/_isFlattenable.js","node_modules/lodash-es/isObject.js","node_modules/lodash-es/isFunction.js","node_modules/lodash-es/_coreJsData.js","node_modules/lodash-es/_isMasked.js","node_modules/lodash-es/_toSource.js","node_modules/lodash-es/_baseIsNative.js","node_modules/lodash-es/_getNative.js","node_modules/lodash-es/_getValue.js","node_modules/lodash-es/_nativeCreate.js","node_modules/lodash-es/_Map.js","node_modules/lodash-es/_Set.js","node_modules/lodash-es/_createSet.js","node_modules/lodash-es/_setToArray.js","src/util.js","src/browser.js"],"names":["freeGlobal","global","_typeof","Object","freeSelf","self","root","Function","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","nullTag","undefinedTag","baseGetTag","value","isOwn","call","tag","e","result","getRawTag","objectToString","isObjectLike","argsTag","baseIsArguments","propertyIsEnumerable","arguments","isConcatSpreadable","isObject","type","asyncTag","funcTag","genTag","proxyTag","uid","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","reIsHostCtor","funcProto","reIsNative","RegExp","replace","baseIsNative","func","isFunction","test","toSource","getNative","object","key","getValue","Set","set","index","Array","size","forEach","chars","split","randomString","length","fill","map","end","start","Math","floor","random","randomInt","join","bson","WebSocketServiceInstance","buffer","window","ready","afterReady","defaultSocketId","endpoints","Map","callbacks","acknowledgements","sendQueue","sockets","serializers","deserializers","status","SOCKETSTATUS","freeze","CONNECTING","RECONNECTING","CLOSED","CONNECTED","HTTP_ERROR","message","_getPrototypeOf2","_this","_classCallCheck","this","_len","params","_key","_possibleConstructorReturn","_getPrototypeOf","apply","concat","Error","onReady","url","_ref","location","origin","document","querySelector","baseElement","base","getAttribute","trim","setDefaultEndPoint","endpointLinkElements","querySelectorAll","n","title","setEndpoints","BSON","addSerializer","defaultBsonSerializer","addDeserializer","defaultBsonDeserializer","callback","clear","notEnum","enumeral","checks","_status","check","socketReady","socketId","has","ws","get","readyState","OPEN","getCallbacks","removeCallback","delete","connecting","open","WebSocketService","DEBUG","console","log","addEventListener","close","_sendQueue","messageFunction","send","runSendQueue","removeEventListener","setTimeout","WebSocket","reconnect","messageEvent","respond","id","acknowledgement","data","Blob","reader","FileReader","onload","Buffer","Uint8Array","readAsArrayBuffer","err","error","connect","add","URIError","setEnpointUrl","serialize","TypeError","defaultJsonSerializer","JSON","stringify","defaultJsonDeserializer","parse","deserialize","drop","method","Promise","resolve","reject","response","body","statusMessage","createAcknowledge","request","serializer","deserializer","_window","_window$jQuery","jQuery","$","angular","bolt","doc","completed","websocket","module","factory","MODE","documentElement","doScroll","init"],"mappings":"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","file":"websocket-express.production.min.js","sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import {isObject, isString, isNumber, isBoolean, uniq as unique, flatten} from 'lodash-es';\n\nconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\n\n\n/**\n * Generate a random integer between a start end end value.\n *\n * @param {integer} end\t\t\t\tThe start of the range.\n * @param {integer} [start=0]\t\tThe end of the range.\n * @returns {integer}\t\t\t\tRandom generated number.\n */\nexport function randomInt(end, start=0) {\n\treturn Math.floor(Math.random() * end) + start;\n}\n\n/**\n * Generate a randomstring.\n *\n * @param {integer} [length=32]\t\tThe length of string to generate.\n * @returns {string}\t\t\t\tRandom generated string.\n */\nexport function randomString(length=32) {\n\treturn (new Array(length)).fill(0).map(()=>chars[randomInt(chars.length - 1)]).join('');\n}\n\n/**\n * Get the length of a message object. Used to fake the content-length header in socket.io routes.\n *\n * @private\n * @param {*} message     Message to get length of.  This is assumed to be an object.\n * @returns {number}      Message length.\n */\nexport function getContentLength(message) {\n\ttry {\n\t\tif (isObject(message)) return JSON.stringify(message || {}).length.toString();\n\t\treturn message.toString().length.toString();\n\t} catch(err) {}\n\n\treturn \"1\";\n}\n\n/**\n * Define a defineProperty object for non-configurable property.\n *\n * @param {Object} instance\t\t\t\t\t\t\tInstance to do defineProperty on.\n * @param {string|Array.<string>} propertyName\t\tProperty name(s) to do defineProperty on.\n * @param {*} value\t\t\t\t\t\t\t\t\tThe property value to set.\n * @returns {Object}\t\t\t\t\t\t\t\tThe the instance for chaining purposes.\n */\nexport function definePropertyFixed(instance, propertyName, value) {\n\tmakeArray(propertyName).forEach((_propertyName, n)=>Object.defineProperty(instance, _propertyName, {\n\t\tconfigurable: false,\n\t\tenumerable: true,\n\t\tget: ()=>Array.isArray(propertyName)?value[n]:value,\n\t\tset: ()=>false\n\t}));\n\n\treturn instance;\n}\n\n/**\n * Define a defineProperty object for a standard enumerable, read/write property.\n *\n * @param {Object} instance\t\t\t\t\t\t\tInstance to do defineProperty on.\n * @param {string|Array.<string>} propertyName\t\tProperty name(s) to do defineProperty on.\n * @param {*} value\t\t\t\t\t\t\t\t\tThe property value to set.\n * @param {boolean} [configurable=false]\t\t\tIs this going to set the configurable property?\n * @returns {Object}\t\t\t\t\t\t\t\tThe the instance for chaining purposes.\n */\nexport function defineProperty(instance, propertyName, value, configurable=false) {\n\tmakeArray(propertyName).forEach((_propertyName, n)=>Object.defineProperty(instance, _propertyName, {\n\t\tconfigurable,\n\t\tenumerable: true,\n\t\twritable: true,\n\t\tvalue:Array.isArray(propertyName)?value[n]:value\n\t}));\n\n\treturn instance;\n}\n\n/**\n * Bind a given set of methods in one object to another object.\n *\n * @param {Object} takeFrom\t\t\tObject to bind methods in.\n * @param {Object} bindTo\t\t\tObject to bind each method to.\n * @param {Array} methods\t\t\tMethods to bind.\n * @returns {Object}\t\t\t\tThe takeFrom object for chaining.\n */\nexport function rebinder(takeFrom, bindTo, methods) {\n\tmakeArray(methods.methods).forEach(method=>{\n\t\tbindTo[method] = takeFrom[method].bind(bindTo);\n\t});\n\tmakeArray(methods.properties).forEach(property=>Object.defineProperty(bindTo, property, {\n\t\tget: ()=>takeFrom[property],\n\t\tset: value=>{takeFrom[property] = value}\n\t}));\n\n\treturn takeFrom;\n}\n\n/**\n * Turn the given value into an array.  If it is already an array then return it; if it is a set then convert to an\n * array; and if neither then return as the first item in an array. The purpose of this function is for function\n * or method parameters where they can be either a array or not.  You can use this to ensure you are working on\n * an array.\n *\n * @public\n * @param {Array|Set|*} value\t\tValue to return or convert.\n * @returns {Array}\t\t\t\t\tThe converted value (or original if already an array).\n */\nexport function makeArray(value) {\n\tif (value === undefined) return [];\n\tif (value instanceof Set) return [...value];\n\treturn (Array.isArray(value) ? value : [value]);\n}\n\nexport {isObject};\nexport {isString};\nexport {isNumber};\nexport {isBoolean};\nexport {unique};\nexport {flatten};","import {randomString} from \"./util\";\n\nlet buffer = window.buffer;\nlet ready = false;\nlet bson;\n\nconst afterReady = new Set();\nconst defaultSocketId = 'main';\nconst endpoints = new Map();\nconst callbacks = new Map();\nconst acknowledgements = new Map();\nconst sendQueue = new Map();\nconst sockets = new Map();\nconst serializers = new Map();\nconst deserializers = new Map();\nconst status = new Map();\nconst SOCKETSTATUS = Object.freeze({\n\tCONNECTING: 1,\n\tRECONNECTING: 2,\n\tCLOSED: 3,\n\tCONNECTED: 4\n});\n\nclass HTTP_ERROR extends Error {\n\tconstructor(message, ...params) {\n\t\tsuper(message.message,...params);\n\t\tthis.status = message.status;\n\t}\n}\n\n/**\n * Initiate this module, binding into all the correct global and framework points.\n */\nfunction init() {\n\tconst {\n\t\tjQuery=((!!window.$ && !!window.$.jQuery)?window.$:undefined),\n\t\tangular,\n\t\tbolt,\n\t\tdocument:doc\n\t\t} = window;\n\n\tif (!!jQuery) window.jQuery.websocket = new WebSocketService();\n\tif (!!angular) angular.module(\"websocket-express\", []).factory(\"$websocket\", ()=>new WebSocketService());\n\tif (!!bolt) {\n\t\tbolt.WebSocketService = WebSocketService;\n\t\tif (!!bolt.MODE && (bolt.MODE.has(\"DEVELOPMENT\") || bolt.MODE.has(\"DEBUG\"))) {\n\t\t\tbolt.WebSocketService.DEBUG = true;\n\t\t}\n\t}\n\n\tif (!!bolt && !!jQuery && !!angular) window.WebSocketService = WebSocketService;\n\n\t// This is extracted from jQuery.ready(), we want the works in all situations provided by jQuery without\n\t// the jQuery dependency. (@see https://github.com/jquery/jquery/blob/master/src/core/ready.js).\n\tfunction completed() {\n\t\tdocument.removeEventListener(\"DOMContentLoaded\", completed);\n\t\twindow.removeEventListener(\"load\", completed);\n\t\tonReady();\n\t}\n\n\tif (doc.readyState===\"complete\" || (doc.readyState !==\"loading\" && !doc.documentElement.doScroll)) {\n\t\twindow.setTimeout(onReady);\n\t} else {\n\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\t\twindow.addEventListener( \"load\", completed );\n\t}\n}\n\n/**\n * Function to call when document is ready.  Only run once to perform all waiting websocket messages.\n */\nfunction onReady() {\n\tsetEndpoints();\n\tif (!!window.BSON && !!WebSocketServiceInstance) {\n\t\tWebSocketServiceInstance\n\t\t\t.addSerializer(\"bson\", defaultBsonSerializer)\n\t\t\t.addDeserializer(\"bson\", defaultBsonDeserializer);\n\t}\n\tready = true;\n\tafterReady.forEach(callback=>callback());\n\tafterReady.clear();\n}\n\n/**\n * Check if a status property is not one of a number of enum values.\n *\n * @param {*} status\t\t\tStatus to check.\n * @param {Object} enumeral\t\tEnum to check within.\n * @param {Arrray} checks\t\tEnum values to check.\n * @returns {boolean}\t\t\tDoes it pass the test.\n */\nfunction notEnum(status, enumeral, checks) {\n\tlet _status = true;\n\tchecks.forEach(check=>{\n\t\t_status = _status && (status !== enumeral[check])\n\t});\n\treturn _status;\n}\n\n/**\n * Search through all the locations for websocket endpoint definitions setting these.  Will use defaults if non\n * found. These can be defined in <link rel=\"websocket-endpoint\"> tags, where the title attribute is the endpoint\n * name and the href is the endpoint.\n */\nfunction setEndpoints() {\n\tsetDefaultEndPoint();\n\n\tlet endpointLinkElements = window.document.querySelectorAll(\"link[rel=websocket-endpoint][href]\");\n\tif (endpointLinkElements.length) {\n\t\tfor (let n=0; n < endpointLinkElements.length; n++) {\n\t\t\tlet url = (endpointLinkElements[n].getAttribute(\"href\") || \"\").trim();\n\t\t\tif (url !== \"\") {\n\t\t\t\tlet title = (endpointLinkElements[n].getAttribute(\"title\") || \"\").trim();\n\t\t\t\tif (title === \"\") title = defaultSocketId;\n\t\t\t\tendpoints.set(title, url);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Set the endpoint of the default endpoint, searching all the definition points for this.\n */\nfunction setDefaultEndPoint() {\n\tconst [origin, baseElement] = [window.location.origin, window.document.querySelector(\"base[href]\")];\n\tlet url;\n\tif (baseElement) {\n\t\tconst base = (baseElement.getAttribute(\"href\") || \"\").trim().replace(origin, \"\");\n\t\tif (base !== \"\") url = `${origin}${base}`;\n\t} else {\n\t\turl = `${origin}/`;\n\t}\n\n\turl = url\n\t\t.replace(\"https://\", \"wss://\")\n\t\t.replace(\"http://\", \"ws://\");\n\n\tendpoints.set(defaultSocketId, url);\n}\n\n/**\n * Create an acknowledge handler.\n *\n * @param {Function} resolve\t\tPromise resolve handler.\n * @param {Function} reject\t\t\tPromise rejection handler.\n * @returns {Function}\t\t\t\tThe handler.\n */\nfunction createAcknowledge(resolve, reject) {\n\treturn (err, response)=>{\n\t\tif (err) return reject(err);\n\t\tif ((response.status || 200) >= 400) {\n\t\t\tif (err) return reject(err);\n\t\t\tconst message = (response.body || response.statusMessage || \"\").trim();\n\t\t\tconst status = (response.status || 400);\n\t\t\treturn reject(new HTTP_ERROR({message, status}));\n\t\t}\n\t\treturn resolve(response);\n\t};\n}\n\n/**\n * Is given websocket ready for transporting data?\n *\n * @param {string} [socketId=defaultSocketId]\t\tThe socket id to test.\n * @returns {boolean}\t\t\t\t\t\t\t\tIs it ready?\n */\nfunction socketReady(socketId=defaultSocketId) {\n\tif (!sockets.has(socketId)) return undefined;\n\tconst ws = sockets.get(socketId);\n\treturn ((ws.readyState === ws.OPEN) ? ws : undefined);\n}\n\n/**\n * Send all the messages for a given socket that are in the queue.\n *\n * @param {string} [socketId=defaultSocketId]\t\tThe socket id to send messages for.\n */\nfunction runSendQueue(socketId=defaultSocketId) {\n\tconst _sendQueue = sendQueue.get(socketId);\n\tconst ws = socketReady(socketId);\n\tif (_sendQueue && ws) {\n\t\t_sendQueue.forEach(messageFunction=>ws.send(messageFunction()));\n\t\t_sendQueue.clear();\n\t\tsendQueue.delete(socketId);\n\t}\n}\n\n/**\n * Send a given message on a given socket.\n *\n * @param {Function} messageFunction\t\t\t\tMessage function to call to generate the message.\n * @param {string} [socketId=defaultSocketId]\t\tThe socket to send on.\n */\nfunction send(messageFunction, socketId=defaultSocketId) {\n\tconst ws = socketReady(socketId);\n\tif (ws) return ws.send(messageFunction());\n\tif (!sendQueue.has(socketId)) sendQueue.set(socketId, new Set());\n\tsendQueue.get(socketId).add(messageFunction);\n}\n\n/**\n * Get callbacksfor given listen type on given socket.\n * @param {string} type\t\t\t\t\t\t\t\tThe type to get for.\n * @param {string} [socketId=defaultSocketId]\t\tThe socket to get callbacks for.\n * @returns {Array.<Function>}\t\t\t\t\t\tArray of callbacks.\n */\nfunction getCallbacks(type, socketId=defaultSocketId) {\n\tif (!callbacks.has(socketId)) callbacks.set(socketId, new Map());\n\tif (!callbacks.get(socketId).has(type)) callbacks.get(socketId).set(type, new Set());\n\treturn callbacks.get(socketId).get(type);\n}\n\n/**\n * Remove the given callback from a callback set.\n *\n * @param {Set.<Set>} callbacks\t\tCallback to search through.\n * @param {Function} callback\t\tCallback to remove.\n */\nfunction removeCallback(callbacks, callback) {\n\tcallbacks.forEach(callbacks=>callbacks.delete(callback));\n}\n\n/**\n * Get the endpoint url for the given socket id.\n *\n * @param {string} [url]\t\t\tThe url to set endpoint to.\n * @param {string} socketId\t\t\tThe socket id to set endpoint on.\n * @returns {string}\t\t\t\tThe endpoint url for given socket id.\n */\nfunction setEnpointUrl(url, socketId) {\n\tif (url) {\n\t\tif (!ready) {\n\t\t\tafterReady.add(()=>endpoints.set(socketId, url));\n\t\t} else {\n\t\t\tendpoints.set(socketId, url);\n\t\t}\n\t}\n\tif (!url && !endpoints.has(socketId)) throw new URIError(`No websocket endpoint for ${socketId}`);\n\tif (!url && endpoints.has(socketId)) url = endpoints.get(socketId);\n\n\treturn url;\n}\n\n/**\n * Try reconnecting to given socket after it has dropped.\n *\n * @param {string} url\t\t\tThe endpoint url for websocket.\n * @param {string} socketId\t\tThe socket id.\n */\nfunction reconnect(url, socketId) {\n\tsockets.delete(socketId);\n\tsetTimeout(()=>{\n\t\tif (notEnum(status.get(socketId), SOCKETSTATUS, ['CONNECTING', 'RECONNECTING', 'CONNECTED'])) {\n\t\t\tstatus.set(socketId, SOCKETSTATUS.RECONNECTING);\n\t\t\tif (!!WebSocketService.DEBUG) console.log(\"Trying reconnect\");\n\t\t\tsockets.set(socketId, new WebSocket(url));\n\t\t\tconnecting(sockets.get(socketId), url, socketId);\n\t\t}\n\t}, 1000*3);\n}\n\nfunction drop(socketId) {\n\tsockets.get(socketId).close();\n}\n\n/**\n * Handle websocket connection, errors and reconnection.\n *\n * @param {WebSocket} ws\t\t\tThe websocket to handle.\n * @param {string} url\t\t\t\tThe endpoint to connect to.\n * @param {string} socketId\t\t\tThe socket id to set.\n */\nfunction connecting(ws, url, socketId) {\n\t/**\n\t * After open listener, setup message handling and send the message queue.\n\t */\n\tfunction open() {\n\t\tstatus.set(socketId, SOCKETSTATUS.CONNECTED);\n\t\tif (!!WebSocketService.DEBUG) console.log(`Opened ${url} for ${socketId}`);\n\t\tws.addEventListener(\"close\", close);\n\t\tws.addEventListener(\"message\", message);\n\t\trunSendQueue(socketId);\n\t}\n\n\t/**\n\t * Close listener, try to reconnect.\n\t */\n\tfunction close() {\n\t\tstatus.set(socketId, SOCKETSTATUS.CLOSED);\n\t\tif (!!WebSocketService.DEBUG) console.log(`Closed ${url} for ${socketId}`);\n\t\tws.removeEventListener(\"open\", open);\n\t\tws.removeEventListener(\"close\", message);\n\t\tws.removeEventListener(\"message\", message);\n\t\treconnect(url, socketId, ws);\n\t}\n\n\t/**\n\t * Handle any websocket errors.\n\t *\n\t * @param {Error} err\t\tError message to handle.\n\t */\n\tfunction error(err) {\n\t\tconsole.error(`Error on ${url} for ${socketId}`, err);\n\t\treturn close();\n\t}\n\n\t/**\n\t * Handle a message event\n\t *\n\t * @param {Event} messageEvent\t\tThe message event to handle.\n\t */\n\tfunction message(messageEvent) {\n\t\tconst respond = message=>{\n\t\t\tif (!message.id) {\n\t\t\t\tif (callbacks.has(message.type)) {\n\t\t\t\t\tcallbacks.get(type).forEach(callbacks=>callback(message.data));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (acknowledgements.has(message.id)) {\n\t\t\t\t\tlet acknowledgement = acknowledgements.get(message.id);\n\t\t\t\t\tif (message.type === 'error') {\n\t\t\t\t\t\tacknowledgement(message.data, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tacknowledgement(null, message.data);\n\t\t\t\t\t}\n\t\t\t\t\tacknowledgements.delete(message.id);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (typeof messageEvent.data === 'string') {\n\t\t\trespond(deserializers.get('json')(messageEvent.data));\n\t\t} else if (messageEvent.data instanceof Blob) {\n\t\t\tlet reader = new FileReader();\n\t\t\treader.onload = function() {\n\t\t\t\trespond(new buffer.Buffer(new Uint8Array(this.result)));\n\t\t\t};\n\t\t\treader.readAsArrayBuffer(messageEvent.data);\n\t\t}\n\t}\n\n\tws.addEventListener(\"error\", error);\n\tws.addEventListener(\"open\", open);\n}\n\n/**\n * Connect to a given endpoint for socket id supplied.\n *\n * @param {string} [url]\tThe endpoint to connect to.\n * @param socketId\t\t\tThe socket id to connecct for.\n */\nfunction connect(url, socketId) {\n\turl = setEnpointUrl(url, socketId);\n\tif (notEnum(status.get(socketId), SOCKETSTATUS, ['CONNECTING', 'RECONNECTING', 'CONNECTED'])) {\n\t\tstatus.set(socketId, SOCKETSTATUS.CONNECTING);\n\t\tif (!sockets.has(socketId)) sockets.set(socketId, new WebSocket(url));\n\t\tconnecting(sockets.get(socketId), url, socketId);\n\t}\n}\n\n/**\n * Bson serializer.\n *\n * @param {*} data\t\tData to parse into BSON.\n * @returns {Buffer}\tBSON from the data.\n */\nfunction defaultBsonSerializer(data) {\n\ttry {\n\t\treturn bson.serialize(data);\n\t} catch(err) {\n\t\tthrow new TypeError(`Could not convert data to bson for sending`);\n\t}\n}\n\n/**\n * Json serializer (default one applied by default to all new socket channels).\n *\n * @param {*} data\t\tData to parse into JSON.\n * @returns {string}\tJSON from the data.\n */\nfunction defaultJsonSerializer(data) {\n\ttry {\n\t\treturn JSON.stringify(data);\n\t} catch(err) {\n\t\tthrow new TypeError(`Could not convert data to json for sending`);\n\t}\n}\n\n/**\n * Json deserializer (default one applied by default to all new socket channels).\n *\n * @param {string} data\t\t\tData to parse from JSON.\n * @returns {Object|Array|*}\tParsed data.\n */\nfunction defaultJsonDeserializer(data) {\n\ttry {\n\t\treturn JSON.parse(data);\n\t} catch(err) {\n\t\tthrow new TypeError(`Could not convert from json string.`);\n\t}\n}\n\n/**\n * Bson deserializer.\n *\n * @param {string} data\t\t\tData to parse from BSON..\n * @returns {Object|Array|*}\tParsed data.\n */\nfunction defaultBsonDeserializer(data) {\n\ttry {\n\t\treturn bson.deserialize(data);\n\t} catch(err) {\n\t\tthrow new TypeError(`Could not convert from json string.`);\n\t}\n}\n\nlet WebSocketServiceInstance;\n\n/**\n * Websocket handler service\n *\n * @singleton\n */\nclass WebSocketService {\n\tconstructor() {\n\t\tif (!WebSocketServiceInstance) WebSocketServiceInstance = this;\n\t\tthis.addSerializer(\"json\", defaultJsonSerializer).addDeserializer(\"json\", defaultJsonDeserializer);\n\t\tif (!!bson) this.addSerializer(\"bson\", defaultBsonSerializer).addDeserializer(\"bson\", defaultBsonDeserializer);\n\t\treturn WebSocketServiceInstance;\n\t}\n\n\t/**\n\t * Connect to a given endpoint for given socket-id.\n\t *\n\t * @param {string} url\t\t\t\t\t\t\t\tEndpoint to connect to.\n\t * @param {string} [socketId=defaultSocketId]\t\tSocket id to connect for.\n\t */\n\tconnect(url, socketId=defaultSocketId) {\n\t\tif (!url && !ready) return afterReady.add(()=>connect(url, socketId));\n\t\tconnect(url, socketId);\n\t}\n\n\tdrop(socketId=defaultSocketId) {\n\t\tdrop(socketId);\n\t}\n\n\t/**\n\t * Add a listener for given message type on given socket.\n\t *\n\t * @param {Function} callback\t\tListener callback.\n\t * @param {string} type\t\t\t\tMessage type to listen for.\n\t * @param {string} socketId\t\t\tSocket id to use.\n\t * @returns {Function}\t\t\t\tUnlisten function.\n\t */\n\tlisten(callback, type, socketId=defaultSocketId) {\n\t\tgetCallbacks(type, socketId).add(callback);\n\t\treturn ()=>getCallbacks(type, socketId).delete(callback);\n\t}\n\n\t/**\n\t * Remove a given listener on the given socket.\n\t *\n\t * @param {Function} callback\t\tListener to remove.\n\t * @param {string} socketId\t\t\tSocket id to remove listener on.\n\t */\n\tremoveListener(callback, socketId) {\n\t\tif (socketId && callbacks.has(socketId)) return removeCallback(callbacks.get(socketId), callback);\n\t\tcallbacks.forEach(callbacks=>removeCallback(callbacks, callback));\n\t}\n\n\t/**\n\t * Send a request on the given socket.\n\t *\n\t * @param {Object} data\t\t\t\t\t\t\tData to send.\n\t * @param {string} [socketId=defaultSocketId]\tSocket to send on.\n\t * @param {string} [type=json]\t\t\t\t\tType of data to send.\n\t * @returns {Promise.<Object>}\t\t\t\t\tPromise resolving to server response.\n\t */\n\trequest(data, socketId=defaultSocketId, type='json') {\n\t\tdata.method = data.method || \"get\";\n\n\t\treturn new Promise((resolve, reject)=>{\n\t\t\tconst id = randomString();\n\t\t\tacknowledgements.set(id, createAcknowledge(resolve, reject));\n\t\t\tconst message = {type:\"request\", id, data};\n\n\t\t\tsend(()=>{\n\t\t\t\tif (serializers.has(type)) return serializers.get(type)(message);\n\t\t\t\tthrow new TypeError(`No parser for type ${type}`);\n\t\t\t}, socketId);\n\t\t});\n\t}\n\n\trequestJson(data, socketId=defaultSocketId) {\n\t\treturn this.request(data, socketId, 'json');\n\t}\n\n\trequestBson(data, socketId=defaultSocketId) {\n\t\treturn this.request(data, socketId, 'bson');\n\t}\n\n\t/**\n\t * Is given socket open and ready?\n\t *\n\t * @param {string} [socketId=defaultSocketId]\t\tSocket to test for readiness.\n\t * @returns {boolean}\t\t\t\t\t\t\t\tIs it ready?\n\t */\n\tready(socketId=defaultSocketId) {\n\t\treturn !!socketReady(socketId);\n\t}\n\n\t/**\n\t * Add an endpoint url for a given id.\n\t *\n\t * @param {string} id\t\t\t\tThe id set endpoint on.\n\t * @param {string} url\t\t\t\tThe endpoint url.\n\t * @param {WebSocketService}\t\tFor chaining.\n\t */\n\taddEndpoint(id, url) {\n\t\tendpoints.set(id, url);\n\t\treturn this;\n\t}\n\n\t/**\n\t * remove an endpoint for a given id.\n\t *\n\t * @param {string} id\t\t\t\tThe id to remove an endpoint for.\n\t * @param {WebSocketService}\t\tFor chaining.\n\t */\n\tremoveEndpoint(id) {\n\t\tendpoints.delete(id);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a message serializer for given type.\n\t *\n\t * @param {string} type\t\t\t\tMessage type to add for.\n\t * @param {Function} serializer\t\tSerializer function to add.\n\t * @returns {WebSocketService}\t\tFor chaining.\n\t */\n\taddSerializer(type, serializer) {\n\t\tserializers.set(type, serializer);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove a serializer for a given message type.\n\t *\n\t * @param {string} type\t\t\t\tMessage type to remove for.\n\t * @returns {WebSocketService}\t\tFor chaining.\n\t */\n\tremoveSerializer(type) {\n\t\tserializers.delete(type);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a message deserializer for given type.\n\t *\n\t * @param {string} type\t\t\t\t\tMessage type to add for.\n\t * @param {Function} deserializer\t\tDeserializer function to add.\n\t * @returns {WebSocketService}\t\t\tFor chaining.\n\t */\n\taddDeserializer(type, deserializer) {\n\t\tdeserializers.set(type, deserializer);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove a deserializer for a given message type.\n\t *\n\t * @param {string} type\t\t\t\tMessage type to remove for.\n\t * @returns {WebSocketService}\t\tFor chaining.\n\t */\n\tremoveDeserializer(type) {\n\t\tdeserializers.delete(type);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the default socket id.\n\t *\n\t * @returns {string}\n\t */\n\tget defaultSocketId() {\n\t\treturn defaultSocketId;\n\t}\n\n\t/**\n\t * Get the object type string.\n\t *\n\t * @returns {string}\n\t */\n\tget [Symbol.toStringTag]() {\n\t\treturn \"WebSocketService\";\n\t}\n}\n\nWebSocketService.DEBUG = false;\n\ninit();\n"]}